services:
  db:
    image: postgres:17
    hostname: db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - tesis-network

  backend:
    build: ./backend
    environment:
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      SECRET_KEY: ${SECRET_KEY}
      EXP: ${EXP}
      SUPERUSER_NAME: ${SUPERUSER_NAME}
      SUPERUSER_PASSWORD: ${SUPERUSER_PASSWORD}
      SUPERUSER_EMAIL: ${SUPERUSER_EMAIL}
      SPRING_PROFILES_ACTIVE: dev
    ports:
      - "8080:8080"
    volumes:
      - ./backend:/app
    depends_on:
      db:
        condition: service_healthy
    networks:
      - tesis-network

  frontend:
    build: ./frontend
    ports:
      - "5175:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - VITE_API_URL=/api
    networks:
        - tesis-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    networks:
      - tesis-network
    depends_on:
      - db

networks:
  tesis-network:
    driver: bridge

volumes:
  postgres-data:
